version: '3.9'
services:
  traefik:
    container_name: traefik
    image: traefik:v3.4.4
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/matt/traefik/acme:/acme
      - /home/matt/traefik/logs:/logs
    environment:
      - CF_API_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    command:            
      - --api=true
      - --global.checkNewVersion=true
      - --log.level=DEBUG.
      - --log.filePath=/logs/traefik.log
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100                                     
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --entryPoints.console.address=:8080
      - --entryPoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.web.http.redirections.entrypoint.permanent=true
      - --certificatesResolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesResolvers.letsencrypt.acme.storage=acme/acme.json
      - --certificatesResolvers.letsencrypt.acme.dnsChallenge=true
      - --certificatesResolvers.letsencrypt.acme.dnsChallenge.provider=cloudflare
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.admin.basicauth.users=${TRAEFIK_USERS}
      - traefik.http.routers.thisproxylocal.rule=Host(${TRAEFIK_IP})
      - traefik.http.routers.thisproxylocal.entryPoints=console
      - traefik.http.routers.thisproxylocal.service=api@internal
      - traefik.http.routers.thisproxylocal.middlewares=admin
      - traefik.http.services.thisproxytls.loadbalancer.server.port=8080
      - traefik.http.routers.thisproxytls.rule=Host(`traefik.tehmatt.com`)
      - traefik.http.routers.thisproxytls.entrypoints=websecure
      - traefik.http.routers.thisproxytls.service=api@internal
      - traefik.http.routers.thisproxytls.middlewares=admin
      - traefik.http.routers.thisproxytls.tls.certresolver=letsencrypt
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.15
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - UMASK_SET=022 #optional
    volumes:
      - /home/matt/sonarr:/config
      - tv:/tv
      - nzb-dls:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.tehmatt.com`)
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.tls.certresolver=letsencrypt
      - traefik.http.routers.sonarr.middlewares=tinyauth
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:5.26.2
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - UMASK_SET=022
    volumes:
      - /home/matt/radarr:/config
      - movies:/movies
      - nzb-dls:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.tehmatt.com`)
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.tls.certresolver=letsencrypt
      - traefik.http.routers.radarr.middlewares=tinyauth
    ports:
      - 7878:7878
    restart: unless-stopped
  
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.38.0-nightly
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/matt/prowlarr:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.tehmatt.com`)
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.tls.certresolver=letsencrypt
    ports:
      - 9696:9696
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:0.4.19-nightly
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/matt/readarr:/config
      - books:/books
      - nzb-dls:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.readarr.rule=Host(`readarr.tehmatt.com`)
      - traefik.http.routers.readarr.entrypoints=websecure
      - traefik.http.routers.readarr.tls.certresolver=letsencrypt
    ports:
      - 8787:8787
    restart: unless-stopped

  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/matt/mylar3/:/config
      - comics:/comics
      - torrent-dls:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.mylar3.rule=Host(`comics.tehmatt.com`)
      - traefik.http.routers.mylar3.entrypoints=websecure
      - traefik.http.routers.mylar3.tls.certresolver=letsencrypt
    ports:
      - 8090:8090
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:2021.12.12
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/matt/overseerr:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr.rule=Host(`request.tehmatt.com`)
      - traefik.http.routers.overseerr.entrypoints=websecure
      - traefik.http.routers.overseerr.tls.certresolver=letsencrypt
    ports:
      - 5055:5055
    restart: unless-stopped

  overseerr2:
    image: lscr.io/linuxserver/overseerr:2021.12.12
    container_name: overseerr2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/matt/overseerr2:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr2.rule=Host(`leslie.tehmatt.com`)
      - traefik.http.routers.overseerr2.entrypoints=websecure
      - traefik.http.routers.overseerr2.tls.certresolver=letsencrypt
    ports:
      - 5056:5055
    restart: unless-stopped

  notifiarr:
    container_name: notifiarr
    hostname: notifiarr
    image: golift/notifiarr:0.8.3
    restart: unless-stopped
    ports:
      - "5454:5454"
    volumes:
      - /home/matt/notifiarr:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:4.5.2
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - HAS_IPV6=false
    volumes:
      - /home/matt/sabnzbd:/config
      - nzb-dls:/downloads
      - nzb-dls:/incomplete-downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.sabnzbd.rule=Host(`sab.tehmatt.com`)
      - traefik.http.routers.sabnzbd.entrypoints=websecure
      - traefik.http.routers.sabnzbd.tls.certresolver=letsencrypt
    ports:
      - 8585:8585
    restart: unless-stopped

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:2.26.1
    container_name: audiobookshelf
    ports:
      - 13378:80
    volumes:
      - audiobooks:/audiobooks
      - podcasts:/podcasts
      - audiobook-uploads:/uploads
      - /home/matt/audiobookshelf:/config
      - /home/matt/audiobookshelf:/metadata
    labels:
      - traefik.enable=true
      - traefik.http.routers.audiobookshelf.rule=Host(`abs.tehmatt.com`)
      - traefik.http.routers.audiobookshelf.entrypoints=websecure
      - traefik.http.routers.audiobookshelf.tls.certresolver=letsencrypt
    restart: unless-stopped

  openaudible:
    image: openaudible/openaudible:latest
    container_name: openaudible
    ports:
      - 13380:80
      - 3033:3000
    volumes:
      - audiobook-uploads:/uploads
      - /home/matt/oa-matt:/config
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:v1.4.0
    container_name: homepage
    environment:
      PUID: 1000
      PGID: 1000
      HOMEPAGE_ALLOWED_HOSTS: homepage.tehmatt.com, 73.74.64.221:3003
    ports:
      - 3003:3000
    volumes:
      - /home/matt/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`homepage.tehmatt.com`)
      - traefik.http.routers.homepage.entrypoints=websecure
      - traefik.http.routers.homepage.tls.certresolver=letsencrypt
    restart: unless-stopped

  nordlynx:
    image: ghcr.io/bubuntux/nordlynx:2023-05-01
    container_name: nordlynx
    cap_add:
      - NET_ADMIN                             # required
      - SYS_MODULE                            # maybe
    environment:
      - PRIVATE_KEY=${NORDLYNX_KEY}
      - QUERY=filters\[servers_groups\]\[identifier\]=legacy_p2p
      - NET_LOCAL=192.168.0.0/16
      - TZ=America/Chicago
    ports:
      - 8089:8089 # qbittorrent web interface
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.conf.all.rp_filter=2
      - net.ipv6.conf.all.disable_ipv6=1
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent:20.04.1
    network_mode: service:nordlynx
    container_name: qbittorrent
    depends_on:
      - nordlynx
    environment:
      - WEBUI_PORT=8089
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - NETWORK=192.168.1.0/24  # So it can be accessed within the local network
        #ports:
        #- 8089:8089
    volumes:
      - /home/matt/qbittorrent:/config
      - torrent-dls:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.rule=Host(`qt.tehmatt.com`)
      - traefik.http.routers.qbittorrent.entrypoints=websecure
      - traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt
    restart: unless-stopped

  qbittorrentnovpn:
    image: lscr.io/linuxserver/qbittorrent:5.1.2
    container_name: qbittorrentnovpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - WEBUI_PORT=8484
      - TORRENTING_PORT=6881
    volumes:
      - /home/matt/qbittorrentnovpn:/config
      - torrent-dls:/downloads
    ports:
      - 8484:8484
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  handbrake:
    image: jlesage/handbrake:v25.07.1
    container_name: handbrake
    ports:
      - 5800:5800
    volumes:
      - /home/matt/handbrake:/config
      - handbrake:/storage 
      - handbrake:/watch
      - handbrake:/output
    restart: unless-stopped

  kavita:
    image: jvmilazz0/kavita:0.8.7
    container_name: kavita
    volumes:
      - comics:/comics
      - /home/matt/kavita:/kavita/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.kavita.rule=Host(`kavita.tehmatt.com`)
      - traefik.http.routers.kavita.entrypoints=websecure
      - traefik.http.routers.kavita.tls.certresolver=letsencrypt
    environment:
      - TZ=America/Chicago
    ports:
      - 5005:5000
    restart: unless-stopped

  netbootxyz:
    image: lscr.io/linuxserver/netbootxyz:0.7.6
    container_name: netbootxyz
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - MENU_VERSION=1.9.9
      - PORT_RANGE=30000:30010
      - SUBFOLDER=/ 
    volumes:
      - /home/matt/netboot:/config
      - netboot:/assets
    ports:
      - 3000:3000
      - 69:69/udp
      - 8880:80
    restart: unless-stopped

  homebridge:
    image: homebridge/homebridge:2024-12-11
    container_name: homebridge
    network_mode: host
    volumes:
      - /home/matt/homebridge:/homebridge
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '1'
    healthcheck:
      test: curl --fail localhost:8581 || exit 1
      interval: 60s
      retries: 5
      start_period: 300s
      timeout: 2s
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:2025.7.2
    volumes:
      - /home/matt/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    network_mode: host
    restart: unless-stopped

  mealie:
    image: ghcr.io/mealie-recipes/mealie:v3.0.1
    container_name: mealie
    ports:
        - 9925:9000 
    deploy:
      resources:
        limits:
          memory: 1000M
    volumes:
      - /home/matt/mealie:/app/data/
    labels:
      - traefik.enable=true
      - traefik.http.routers.mealie.rule=Host(`mealie.tehmatt.com`)
      - traefik.http.routers.mealie.entrypoints=websecure
      - traefik.http.routers.mealie.tls.certresolver=letsencrypt
    environment:
      - ALLOW_SIGNUP=true
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - MAX_WORKERS=1
      - WEB_CONCURRENCY=1
      - BASE_URL=https://mealie.tehmatt.com
    restart: unless-stopped

  calibre:
    image: ghcr.io/linuxserver/calibre:7.9.0
    container_name: calibre
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /home/matt/calibre:/config
      - book-uploads:/uploads
      - book-plugins:/plugins
    ports:
      - 8383:8080
      - 8283:8081
    restart: unless-stopped

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:0.6.21
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /home/matt/calibre:/config
      - books:/books
    labels:
      - traefik.enable=true
      - traefik.http.routers.calibre.rule=Host(`calibre.tehmatt.com`)
      - traefik.http.routers.calibre.entrypoints=websecure
      - traefik.http.routers.calibre.tls.certresolver=letsencrypt
    ports:
      - 8083:8083
    restart: unless-stopped

  tautulli:
    image: lscr.io/linuxserver/tautulli:2.15.2
    container_name: tautulli
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/matt/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped

  mysql:
    image: mysql:9.3
    container_name: mysql
    hostname: mysql
    restart: unless-stopped
    volumes:
      - /home/matt/semaphore-mysql:/var/lib/mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: semaphore
      MYSQL_USER: semaphore
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  semaphore:
    image: semaphoreui/semaphore:v2.15.0
    container_name: semaphore
    restart: unless-stopped
    ports:
      - 3333:3000
    environment:
      SEMAPHORE_DB_USER: semaphore
      SEMAPHORE_DB_PASS: ${MYSQL_PASSWORD}
      SEMAPHORE_DB_HOST: mysql
      SEMAPHORE_DB_PORT: 3306
      SEMAPHORE_DB_DIALECT: mysql
      SEMAPHORE_DB: semaphore
      SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
      SEMAPHORE_ADMIN_PASSWORD: ${SEMAPHORE_ADMIN_PASSWORD}
      SEMAPHORE_ADMIN_NAME: admin
      SEMAPHORE_ADMIN_EMAIL: admin@localhost
      SEMAPHORE_ADMIN: admin
      SEMAPHORE_ACCESS_KEY_ENCRYPTION: ${SEMAPHORE_ACCESS_KEY_ENCRYPTION}
    labels:
      - traefik.enable=true
      - traefik.http.routers.semaphore.rule=Host(`semaphore.tehmatt.com`)
      - traefik.http.routers.semaphore.entrypoints=websecure
      - traefik.http.routers.semaphore.tls.certresolver=letsencrypt
      - traefik.http.routers.semaphore.middlewares=tinyauth
    depends_on:
      - mysql
  
  diun:
    image: crazymax/diun:4.29
    container_name: diun
    command: serve
    volumes:
      - "/home/matt/diun:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - "TZ=America/Chicago"
      - "LOG_LEVEL=info"
      - "LOG_JSON=false"
      - "DIUN_WATCH_WORKERS=20"
      - "DIUN_WATCH_SCHEDULE=0 20 * * 0"
      - "DIUN_WATCH_JITTER=30s"
      - "DIUN_PROVIDERS_DOCKER=true"
      - "DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true"
      - "DIUN_NOTIF_PUSHOVER_TOKEN=${PUSHOVER_TOKEN}"
      - "DIUN_NOTIF_PUSHOVER_RECIPIENT=${PUSHOVER_RECIPIENT}"
    restart: always

  broker:
    image: docker.io/library/redis:7
    container_name: paperless-redis
    restart: unless-stopped
    volumes:
      - /home/matt/redis:/data

  db:
    image: docker.io/library/postgres:15
    container_name: paperless-postgres    
    restart: unless-stopped
    volumes:
      - /home/matt/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.7.2
    container_name: paperless-ngx
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    ports:
      - "8000:8000"
    volumes:
      - /home/matt/paperless/data:/usr/src/paperless/data
      - /home/matt/paperless/media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    labels:
      - traefik.enable=true
      - traefik.http.routers.paperless.rule=Host(`paperless.tehmatt.com`)
      - traefik.http.routers.paperless.entrypoints=websecure
      - traefik.http.routers.paperless.tls.certresolver=letsencrypt
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USER}
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_ADMIN_PASSWORD}
      PAPERLESS_URL: ${PAPERLESS_URL}

  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.10
    container_name: paperless-gotenberg
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    container_name: paperless-tika
    restart: unless-stopped

  uptimekuma:
    image: docker.io/louislam/uptime-kuma:1.23.16
    container_name: uptimekuma
    ports:
      - 3001:3001
    volumes:
      - /home/matt/uptimekuma:/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptime.rule=Host(`uptime.tehmatt.com`)
      - traefik.http.routers.uptime.entrypoints=websecure
      - traefik.http.routers.uptime.tls.certresolver=letsencrypt
    restart: unless-stopped

  starcraft:
    image: docker.io/ageo24/sc-bw-vnc:1.0
    container_name: starcraft
    ports:
      - 7070:8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.starcraft.rule=Host(`starcraft.tehmatt.com`)
      - traefik.http.routers.starcraft.entrypoints=websecure
      - traefik.http.routers.starcraft.tls.certresolver=letsencrypt
    restart: unless-stopped

  it-tools:
    container_name: it-tools
    ports:
        - 4567:80
    image: corentinth/it-tools:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.it-tools.rule=Host(`tools.tehmatt.com`)
      - traefik.http.routers.it-tools.entrypoints=websecure
      - traefik.http.routers.it-tools.tls.certresolver=letsencrypt
    restart: unless-stopped

  mattodo-api:
    image: ghcr.io/mtstrong/mattodo.api:v1.0.5
    container_name: mattodo-api
    ports:
      - 7260:7260
    volumes:
      - /home/matt/mattodo-api:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.mattodo-api.rule=Host(`mattodo.tehmatt.com`)
      - traefik.http.routers.mattodo-api.entrypoints=websecure
      - traefik.http.routers.mattodo-api.tls.certresolver=letsencrypt
    restart: unless-stopped

 # project-zomboid:
 #   image: afey/zomboid
 #   container_name: zomboid_server
 #   restart: unless-stopped
 #   environment:
 #     SERVER_NAME: ${ZOMBOID_SERVER_NAME}
 #     ADMIN_PASSWORD: ${ZOMBOID_PASSWORD}
 #   ports:
 #     - "8766:8766/udp"
 #     - "8767:8767/udp"
 #     - "16261:16261/udp"
 #     - "16262-16272:16262-16272"
 #     - "27015:27015"
 #   volumes:
 #     - /home/matt/zomboid/server-data:/server-data
 #     - /home/matt/zomboid/server-files:/server-files

  ddclient:
    image: lscr.io/linuxserver/ddclient:latest
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /home/matt/ddclient:/config
    restart: unless-stopped

  tinyauth:
    container_name: tinyauth
    image: ghcr.io/steveiliop56/tinyauth:v3
    environment:
      - SECRET=${TINYAUTH_SECRET}
      - APP_URL=https://tinyauth.tehmatt.com
      - LOG_LEVEL=0
      - USERS=${USERS}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OAUTH_WHITELIST=swevo24@gmail.com,myswtghst@gmail.com,leslie.r.strong@gmail.com
    labels:
      - traefik.enable=true
      - traefik.http.routers.tinyauth.rule=Host(`tinyauth.tehmatt.com`)
      - traefik.http.routers.tinyauth.entrypoints=websecure
      - traefik.http.routers.tinyauth.tls.certresolver=letsencrypt
      - traefik.http.middlewares.tinyauth.forwardauth.address=http://tinyauth:3000/api/auth/traefik
    restart: unless-stopped

  checkmk:
    image: checkmk/check-mk-raw:2.4.0-latest
    container_name: checkmk-server
    ports:
      - "5000:5000"
      - "5001:5001"
      - "6556:6556"
    volumes:
      - /home/matt/checkmk:/omd/sites
    labels:
      - traefik.enable=true
      - traefik.http.routers.checkmk.rule=Host(`checkmk.tehmatt.com`)
      - traefik.http.routers.checkmk.entrypoints=websecure
      - traefik.http.routers.checkmk.tls.certresolver=letsencrypt
    restart: unless-stopped

  omni-tools:
    image: iib0011/omni-tools:0.5.0
    container_name: omni-tools
    ports:
      - "8384:80"
    labels:
      - traefik.enable=true
      - traefik.http.routers.omni-tools.rule=Host(`omni.tehmatt.com`)
      - traefik.http.routers.omni-tools.entrypoints=websecure
      - traefik.http.routers.omni-tools.tls.certresolver=letsencrypt
    restart: unless-stopped

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:v8
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8385:8080"
    labels:
      - traefik.enable=true
      - traefik.http.routers.dozzle.rule=Host(`logs.tehmatt.com`)
      - traefik.http.routers.dozzle.entrypoints=websecure
      - traefik.http.routers.dozzle.tls.certresolver=letsencrypt
      - traefik.http.routers.dozzle.middlewares=tinyauth
    restart: unless-stopped
    
  ollama:
    image: ollama/ollama:0.9.6
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - /home/matt/ollama:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    restart: always

  openwebui:
    image: ghcr.io/open-webui/open-webui:0.6.16
    container_name: open-webui
    ports:
      - "3008:8080"
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - /home/matt/open-webui:/app/backend/data
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    labels:
      - traefik.enable=true
      - traefik.http.routers.openwebui.rule=Host(`ollama.tehmatt.com`)
      - traefik.http.routers.openwebui.entrypoints=websecure
      - traefik.http.routers.openwebui.tls.certresolver=letsencrypt
      #- traefik.http.routers.openwebui.middlewares=tinyauth
    restart: always

  gitlab:
    image: gitlab/gitlab-ce:18.2.0-ce.0
    container_name: gitlab
    restart: always
    hostname: 'gitlab.tehmatt.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        #Add any other gitlab.rb configuration here, each on its own line
        external_url 'https://gitlab.tehmatt.com:80'
    ports:
      - '8005:80'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
    labels:
      - traefik.enable=true
      - traefik.http.routers.gitlab.rule=Host(`gitlab.tehmatt.com`)
      - traefik.http.routers.gitlab.entrypoints=websecure
      - traefik.http.routers.gitlab.tls=true
      - traefik.http.routers.gitlab.tls.certresolver=letsencrypt
      - traefik.http.routers.gitlab.middlewares=tinyauth
    shm_size: '256m'
    
volumes: 
  semaphore-mysql:
  tv:
    external: true
  movies:
    external: true
  comics:
    external: true
  books:
    external: true
  book-uploads:
    external: true
  book-plugins:
    external: true
  nzb-dls:
    external: true
  torrent-dls:
    external: true
  b-dls:
    external: true
  audiobooks:
    external: true
  audiobook-uploads:
    external: true
  podcasts:
    external: true
  handbrake:
    external: true
  netboot:
    external: true